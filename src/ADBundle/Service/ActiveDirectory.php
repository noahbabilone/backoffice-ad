<?phpnamespace ADBundle\Service;use ADBundle\Entity\User;/** * Description of AD * * @author Yann */class ActiveDirectory{    protected $host = "636";    protected $hosts = "636";    protected $ipServer;    protected $ldapUser;    protected $ldapPass;    protected $ldapConnect;    protected $ldapBind;//    protected $ldapTree = "OU=ComptesUtilisateur,DC=chez,DC=mtvc";    protected $ldapTree = "DC=42groupe,DC=cloud";    /**     * @param $ipServer     * @param $ldapUser     * @param $ldapPass     */    public function __construct($ipServer, $ldapUser, $ldapPass)    {        $this->ipServer = $ipServer;        $this->ldapUser = $ldapUser;        $this->ldapPass = $ldapPass;        $this->ldapConnect = ldap_connect("ldap://" . $this->ipServer, $this->host) or die("Could not connect to LDAP server.");        ldap_set_option($this->ldapConnect, LDAP_OPT_PROTOCOL_VERSION, 3);        ldap_set_option($this->ldapConnect, LDAP_OPT_REFERRALS, 0);        if ($this->ldapConnect) {//            $this->ldapBind = @ldap_bind($this->ldapConnect, "Mtvc\\" . $this->ldapUser, $this->ldapPass) or die ("Error trying to bind: " . ldap_error($ldapConnexion));            $this->ldapBind = @ldap_bind($this->ldapConnect, "42Groupe\\" . $this->ldapUser, $this->ldapPass) or die ("Error trying to bind: " . ldap_error($this->ldapConnect));        }    }    /**     * @param $ldapUser     * @param $password     * @return bool     */    function checkSession($ldapUser, $password)    {        $result = false;//        $ldapUser = 'Mtvc\\' . $ldapUser;        $ldapUser = '42Groupe\\' . $ldapUser;        if ($this->ldapConnect) {            $result = @ldap_bind($this->ldapConnect, $ldapUser, $password);        }        return $result;    }    function getLdapDind()    {    }    function checkBindAdmin()    {        $result = false;        if ($this->ldapConnect) {            $result = ldap_bind($this->ldapConnect, $this->ldapUser, $this->ldapPass);        }        return $result;    }    public function getLdapConnect()    {        if (!$this->ldapConnect) {            return ldap_connect("ldap://" . $this->ipServer, $this->host) or die("Could not connect to LDAP server.");        }        return $this->ldapConnect;    }    public function getLdapBind()    {        if ($this->ldapBind) {            if ($this->ldapConnect) {//            $this->ldapBind = @ldap_bind($this->ldapConnect, "Mtvc\\" . $this->ldapUser, $this->ldapPass) or die ("Error trying to bind: " . ldap_error($ldapConnexion));                return @ldap_bind($this->ldapConnect, "42Groupe\\" . $this->ldapUser, $this->ldapPass) or die ("Error trying to bind: " . ldap_error($this->ldapConnect));            } else {                return @ldap_bind($this->getLdapConnect(), "42Groupe\\" . $this->ldapUser, $this->ldapPass) or die ("Error trying to bind: " . ldap_error($this->ldapConnect));            }        }        return $this->ldapBind;    }    function getAllUser($OU = null)    {        $data = null;        if ($this->ldapConnect && $this->ldapBind) {            $filter = "(&(objectClass=User))";            if ($OU == null) {                $tree = $this->ldapTree;            } else {                $tree = "OU=" . $OU . "," . $this->ldapTree;            }            $result = ldap_search($this->ldapConnect, $tree, $filter) or die ("Error in search query: " . ldap_error($this->ldapConnec));            $data = ldap_get_entries($this->ldapConnect, $result);        }        return $data;    }    function getUser($person)    {        $data = null;        if ($this->ldapConnect && $this->ldapBind) {            $filter = "(&(objectClass=User))";            $result = ldap_search($this->ldapConnect, $person, $filter) or die ("Error in search query: " . ldap_error($this->ldapConnec));            $data = ldap_get_entries($this->ldapConnect, $result);        }        return $data;    }    function getUserAction($person)    {        $data = null;        if ($this->ldapConnect && $this->ldapBind) {            $ldap_tree = "CN=$person," . $this->ldapTree;            $result = ldap_search($this->ldapConnect, $ldap_tree, "(cn=*)") or die ("Error in search query: " . ldap_error($this->ldapConnec));            $data = ldap_get_entries($this->ldapConnect, $result);        }        return $data;    }    public    function removeUser($ldap_tree)    {        $result = false;        if ($this->ldapConnect && $this->ldapBind) {            $result = @ldap_delete($this->ldapConnect, $ldap_tree);            ldap_close($this->ldapConnect);        }        return $result;    }    public    function addUser(User $user)    {        $result = null;        if ($this->ldapConnect && $this->ldapBind) {            $info["cn"] = ucname("{" . $user->getFullName() . " " . $user->getFirstName() . "}");//            $info["sn"] = $user->getLogin();//            $info["objectclass"] = "person";//                        $info["streetAddress"] = $user->getStreet() . " " . $user->getAddress(); //Rue            $info["l"] = $user->getCity(); //Ville            $info["st"] = $user->getState(); //Département            $info["postalCode"] = $user->getState(); //Code postal            //$info["c"] = $_POST['country']; //Pays            $info["givenName"] = ucname("{$user->getFullName()}"); //Prénom            $info["sn"] = ucname("{$user->getLogin()}"); //Nom            $info["displayName"] = ucname("{" . $user->getFullName() . " " . $user->getFirstName() . "}");            $info["description"] = "test";            $info["physicalDeliveryOfficeName"] = $user->getOffice(); //Bureau            $info["telephoneNumber"] = $user->getPhone(); //Numéro de téléphone            $info["userPrincipalName"] = $this->ldapUser; //Logon Name            $info["mail"] = $user->getEmail(); //Adresse mail	            $info["objectClass"] = "person"; //Type            $info["useraccountcontrol"][0] = 544; //Activation du compte            $info["userPassword"] = "{SHA}" . base64_encode(pack("H*", sha1($user->getPassword()))); //Mot de passe//            if ($OU == 2) {//                $info["accountExpires"] = "9223372036854775807";//                $OU = "Users";//            } else if ($OU == 5) {//                $OU = "External";//                $info["accountExpires"] = "130834584000000000";//            } else {//                $OU = "Users";//                $info["accountExpires"] = "130834584000000000";//            }            $ldap_tree = "CN=" . $info["cn"] . "," . $this->ldapTree;            if ($this->personExist($info["cn"])) {                return false;            }            $result = @ldap_add($this->ldapConnect, $ldap_tree, $info);            ldap_close($this->ldapConnect);        }        return $result;    }    function editUser(User $user)    {        $ldapConnect = ldap_connect("ldaps://serverdc.42groupe.cloud") or die("Could not connect to LDAP server.");        ldap_set_option($ldapConnect, LDAP_OPT_PROTOCOL_VERSION, 3);        ldap_set_option($ldapConnect, LDAP_OPT_REFERRALS, 0);                if ($ldapConnect) {            $ldapBind = @ldap_bind($ldapConnect, "42Groupe\\" . $this->ldapUser, $this->ldapPass) or die ("Error trying to bind: " . ldap_error($this->ldapConnect));            if ($ldapBind) {//            $newPassword = "MyPassword";//            $newPassword = "\"" . $newPassword . "\"";//            $newPassw="";//            $len = strlen($newPassword);//            for ($i = 0; $i < $len; $i++)//                $newPassw .= "{$newPassword{$i}}\000";//            $newPassword = $newPassw;//            $userdata["unicodepwd"] = $newPassword;//            $result = ldap_mod_replace($ad, $userDn, $userdata);//            if ($result) echo "User modified!";//            else echo "There was a problem!";                $newPassword = "\"" . 'Zlatan78' . "\"";                $len = strlen($newPassword);                $newPassw = '';                for ($i = 0; $i < $len; $i++) {                    $newPassw .= "{$newPassword{$i}}\000";                }                $info["unicodepwd"] = $newPassword;                var_dump($info);                // $info["userpassword"] = "{SHA}".base64_encode( pack( "H*", sha1($user->getPassword()) ) ); //Mot de passe                $result = ldap_mod_replace($ldapConnect, $user->getDn(), $info) or die ("Error trying to bind: " . ldap_error($ldapConnect));                dump($result);                ldap_close($ldapConnect);                die;            }        }    }    public    function personExist($user)    {        if ($this->ldapConnect && $this->ldapBind) {            if (@ldap_search($this->ldapConnect, "CN=" . $user . "," . $this->ldapTree, "(cn=*)")) {                return true;            }        }        return false;    }    /* Functions */    public    function getData($array, $attr)    {        if (isset($array[$attr][0])) {            return $array[$attr][0];        }        return "-";    }    function ldapSpecialChars($string)    {        $sanitized = array('\\' => '\5c',            '*' => '\2a',            '(' => '\28',            ')' => '\29',            "\x00" => '\00');        return str_replace(array_keys($sanitized), array_values($sanitized), $string);    }    function notice($msg)    {        ?>        <div style='color:#FF0000'><?php echo $msg; ?></div><?php    }}