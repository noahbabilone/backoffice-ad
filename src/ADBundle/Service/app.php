<?phpclass ActiveDirectory{    private $ip_ldap_server = "ldap://10.1.1.15:389";    private $ip_ldap_server_secu = "ldaps://10.1.1.15:636";    private $host = "ldap://10.1.1.15";    private $port = "389";    private $ldap_username;    private $ldap_password;    public function __construct($ldap_username, $ldap_password)    {        //$this->mydap = ldap_connect($this->ip_ldap_server) or die('Error connecting to LDAP');        $this->ldap_username = $ldap_username;        $this->ldap_password = $ldap_password;    }    function connectionAD($ldapUser, $password)    {        echo($ldapUser);        if (empty($this->mydap)) die('Error, LDAP connection already established');        // Connect to AD        $mydap = ldap_connect($this->ip_ldap_server) or die('Error connecting to LDAP');        $result = @ldap_bind($this->ip_ldap_server, "42groupe\\ysaid", $password);//        var_dump($result);        return $result;    }    public function checkConnexionAD()    {        $stdOut = null;        $proc = proc_open(            'php',            array(array('pipe', 'r'), array('pipe', 'w'), array('pipe', 'w')),            $pipes        );        if (is_resource($proc)) {            fwrite($pipes[0], "<?php echo ldap_bind(ldap_connect('$this->ip_ldap_server'),'$this->ldap_username','$this->ldap_password');");            fclose($pipes[0]);            $stdOut = stream_get_contents($pipes[1]);            fclose($pipes[1]);            fclose($pipes[2]);            proc_close($proc);        }        return $stdOut == 1;    }    /**     * Get a list of users from Active Directory.     */    public function listUser()    {        $ldap_connection = ldap_connect($this->ip_ldap_server);        if (TRUE === $this->checkConnexionAD($this->ldap_username, $this->ldap_password)) {            $ldap_base_dn = 'OU=Compteutilisateur,DC=42groupe,DC=cloud';            $search_filter = '(&(objectCategory=*))';            $attributes = array();//            $attributes[] = 'adminCount';            $attributes[] = 'mail';//            $attributes[] = 'givenName';//            $attributes[] = 'cn';            $filter = "(|(givenName=*))";            $filter = '(&(objectClass=inetOrgPerson)(uid=*))';            $attributes = array('dn', 'uid', 'sn');            $result = ldap_search($ldap_connection, $ldap_base_dn, $search_filter, $attributes) or die('Error searching LDAP: ' . ldap_error($ldap_connection));            $info = ldap_get_entries($ldap_connection, $result);            var_dump($info);            die('fin');            $result = ldap_search($ldap_connection, $ldap_base_dn, $search_filter);            if (FALSE !== $result) {                $entries = ldap_get_entries($ldap_connection, $result);                var_dump($entries);                for ($x = 0; $x < $entries['count']; $x++) {                    if (!empty($entries[$x]['givenname'][0]) &&                        !empty($entries[$x]['mail'][0]) &&                        !empty($entries[$x]['samaccountname'][0]) &&                        !empty($entries[$x]['sn'][0]) &&                        'Shop' !== $entries[$x]['sn'][0] &&                        'Account' !== $entries[$x]['sn'][0]                    ) {                        $ad_users[strtoupper(trim($entries[$x]['samaccountname'][0]))] = array('email' => strtolower(trim($entries[$x]['mail'][0])), 'first_name' => trim($entries[$x]['givenname'][0]), 'last_name' => trim($entries[$x]['sn'][0]));                    }                }            }            ldap_unbind($ldap_connection); // Clean up after ourselves.        } else {            die ("Error connextion");        }        // $message .= "Retrieved " . count($ad_users) . " Active Directory users\n";        var_dump($message);    }//    function mydap_end()//    {//        if (!isset($this->mydap)) die('Error, no LDAP connection established');////        // Close existing LDAP connection//        ldap_unbind($this->mydap);//    }    function searchAll()    {        $data = null;        $ldapconn = ldap_connect($this->ip_ldap_server) or die("Could not connect to LDAP server.");        if ($ldapconn) {            $ldapbind = ldap_bind($ldapconn, $this->ldap_username, $this->ldap_password) or die ("Error trying to bind: " . ldap_error($ldapconn));            if ($ldapbind) {//                echo " <br>LDAP bind successful...<br /><br />";;                $ldaptree = "OU=ComptesUtilisateur,DC=chez,DC=mtvc";                $result = ldap_search($ldapconn, $ldaptree, "(cn=*)") or die ("Error in search query: " . ldap_error($ldapconn));                $data = ldap_get_entries($ldapconn, $result);                //var_dump($data);//                echo "Number of entries found: " . ldap_count_entries($ldapconn, $result);            }        }        return $data;    }    function getUser($person)    {        $data = null;        $ldap_connection = ldap_connect($this->ip_ldap_server) or die("Could not connect to LDAP server.");        if ($ldap_connection) {            $ldap_bind = ldap_bind($ldap_connection, $this->ldap_username, $this->ldap_password) or die ("Error trying to bind: " . ldap_error($ldap_connection));            if ($ldap_bind) {//                $ldaptree = "CN=yannick said,OU=Compteutilisateur,DC=42groupe,DC=cloud";                $ldap_tree = "CN=$person,OU=ComptesUtilisateur,DC=chez,DC=mtvc";                $result = ldap_search($ldap_connection, $ldap_tree, "(cn=*)") or die ("Error in search query: " . ldap_error($ldap_connection));                $data = ldap_get_entries($ldap_connection, $result);                //var_dump($data);//                echo "Number of entries found: " . ldap_count_entries($ldapconn, $result);            }        }        return $data;    }    function changePassword($person, $newPassword)    {        $ldap_connection = ldap_connect("ldaps://10.1.1.15:636") or die("Could not connect to LDAP server.");        if ($ldap_connection) {            var_dump($ldap_connection);            $ldap_bind = ldap_bind($ldap_connection, $this->ldap_username, $this->ldap_password) or die ("Error trying to bind: " . ldap_error($ldap_connection));            if ($ldap_bind) {                $ldap_tree = "CN=$person,OU=ComptesUtilisateur,DC=chez,DC=mtvc";                //  $newPassword = "Admin123";                $newPassword = "\"" . $newPassword . "\"";                $len = strlen($newPassword);                $newPassw = '';                for ($i = 0; $i < $len; $i++) {                    $newPassw .= "{$newPassword{$i}}\000";                }                //$newPassword = base64_encode($newPassw);                var_dump($newPassword);                $result = ldap_search($ldap_connection, $ldap_tree, "(cn=*)") or die ("Error in search query: " . ldap_error($ldap_connection));                ldap_sort($ldap_connection, $result, "sn");                $info = ldap_get_entries($ldap_connection, $result);                //var_dump($info);                //die;                $isLocked = (isset($info[0]["lockoutTime"])) ? $info[0]["lockoutTime"] : "";                if ($isLocked > 0) {                    return msg('account_locked');                }                $userDn = $info[0]["distinguishedname"][0];                $userdata["unicodepwd"] = iconv("UTF-8", "UTF-16LE", '"' . $newPassword . '"');                $result = ldap_mod_replace($ldap_connection, $userDn, $userdata)                or die ("Error in search query: $ldap_tree <br> Type Error: <b>*** " . ldap_error($ldap_connection) . ' ***</b>');                die("Modifier");                $result = ldap_mod_replace($ldap_connection, $ldap_tree, $userdata)                or die ("Error in search query: $ldap_tree <br> Type Error: <b>*** " . ldap_error($ldap_connection) . ' ***</b>');                if ($result)                    echo "User modified!";                else                    echo "There was a problem!";            }        }    }    function addUser($info)    {        $result = null;        $ldap_connection = ldap_connect($this->ip_ldap_server) or die("Could not connect to LDAP server.");        if ($ldap_connection) {            $ldap_tree = "CN=" . $info["cn"] . ",OU=ComptesUtilisateur,DC=chez,DC=mtvc";            // Prépare les données            $ldap_bind = ldap_bind($ldap_connection, $this->ldap_username, $this->ldap_password) or die ("Error trying to bind: " . ldap_error($ldap_connection));            if ($ldap_bind) {//                try{//                $result = ldap_search($ldap_connection, $ldap_tree, "(cn=*)");//                var_dump($result);                $result = @ldap_add($ldap_connection, $ldap_tree, $info);                ldap_close($ldap_connection);            }        }        return $result;    }    function removeUser($personn)    {        $result = null;        $ldap_connection = ldap_connect($this->ip_ldap_server) or die("Could not connect to LDAP server.");        if ($ldap_connection) {            $ldap_tree = "CN=$personn,OU=ComptesUtilisateur,DC=chez,DC=mtvc";            // Prépare les données            $ldap_bind = ldap_bind($ldap_connection, $this->ldap_username, $this->ldap_password) or die ("Error trying to bind: " . ldap_error($ldap_connection));            if ($ldap_bind) {                $result = @ldap_delete($ldap_connection, $ldap_tree) ;                ldap_close($ldap_connection);            }        }        return $result;    }  function modifyUser($person,$newPassword)    {        $result = null;        $ldap_connection = ldap_connect($this->ip_ldap_server) or die("Could not connect to LDAP server.");        if ($ldap_connection) {            $ldap_tree = "CN=$person,OU=ComptesUtilisateur,DC=chez,DC=mtvc";            // Prépare les données            $ldap_bind = ldap_bind($ldap_connection, $this->ldap_username, $this->ldap_password) or die ("Error trying to bind: " . ldap_error($ldap_connection));            if ($ldap_bind) {                                                $userdata["unicodepwd"] = iconv("UTF-8", "UTF-16LE", '"' . $newPassword . '"');                $result = @ldap_modify($ldap_connection, $ldap_tree, $userdata) or die ("Error trying to bind: " . ldap_error($ldap_connection));                ldap_close($ldap_connection);            }        }        return $result;    }}//echo "Begining test** <br>";$ldapUser = 'Mtvc\\ysaid';$pass = "Mtvc2016";//$ldapUser = '42groupe\\rash';//$pass = "Root123";$app = new ActiveDirectory($ldapUser, $pass);//var_dump($app->checkConnexionAD($ldapUser, $pass));//echo "List users ";//$data = $app->searchAll();//foreach ($data as $key => $val) {//    if ($key !== "count") {//        echo '<br />Name : ' . $val["cn"][0] . ' ';//        echo '<br />Email:' . ((isset($val["mail"][0])) ? $val["mail"][0] : " None");//        echo "<br /><br />";//    }//}$data = $app->getUser("yasa");//var_dump($data);$newPassword = "Admin123";$info = array();$info["cn"] = "vallery Daccourt";$info["sn"] = "vallery";$info["objectclass"] = "person";var_dump($info);//Add$data = $app->addUser($info);echo "<br><br> <b> Add user </b>: ";var_dump($data);//echo "<br> <b> Remove user </b>:";//$data = $app->removeUser($info["cn"]);//var_dump($data);echo "<br><br> <b> Info user</b>";$data=$app->getUser($info["cn"]);foreach ($data as $key => $val) {    if ($key !== "count") {        echo '<br />Name : ' . $val["cn"][0] . ' ';        echo '<br />Email:' . ((isset($val["mail"][0])) ? $val["mail"][0] : " None");        echo "<br /><br />";    }}echo "<br> <br> <b> Modify user</b>: ";$data=$app->modifyUser($info["cn"],$newPassword);var_dump($data);//$app->changePassword("yasa", $newPassword);//var_dump($data);